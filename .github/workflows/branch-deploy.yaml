name: Deploy feature branch to staging

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and contenerize application
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: 'forge-k8s'
      PR_NUMBER: ${{ github.event.number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'registry.npmjs.org'
          scope: '@flowforge'
          always-auth: true

      - name: Build package
        run: |
          npm install --no-audit --no-fund && \
          npm install --no-audit --no-fund pg-hstore@^2.3.4 && \
          npm install --no-audit --no-fund @flowforge/kubernetes@^1.14.0 && \    
          npm run build

      - name: Set variables
        run: | 
          echo "tagged_image=${{ env.IMAGE_NAME }}:pr-${{ env.PR_NUMBER}}" >> $GITHUB_ENV

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
  
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Build container image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: "./docker/Dockerfile"
          tags: ${{ env.tagged_image }}
          push: false
          outputs: type=docker,dest=/tmp/k8s-forge.tar
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: k8s-forge
          path: /tmp/k8s-forge.tar
          retention-days: 7

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: staging
    permissions:
      packages: read
      contents: read
    env:
      IMAGE_NAME: 'forge-k8s'
      PR_NUMBER: ${{ github.event.number }}
    steps:
      - name: Set variables
        run: | 
          echo "tagged_image=${{ env.IMAGE_NAME }}:pr-${{ env.PR_NUMBER}}" >> $GITHUB_ENV

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: k8s-forge
          path: /tmp

      - name: Configure AWS credentials
        id: aws-config
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          aws-region: eu-west-1
          mask-aws-account-id: true
        
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true

      - name: Push image to ECR
        uses: akhilerm/tag-push-action@v2.1.0
        with:
          src: "${{ env.tagged_image }}"
          dst: ${{ steps.aws-config.outputs.aws-account-id }}.dkr.ecr.eu-west-1.amazonaws.com/flowforge/${{ env.tagged_image }}

